name: Store Manager CI

on: [push, pull_request]

jobs:
  test:
    runs-on: [self-hosted, vm-lab]

    # Use Python 3.11 from the container; no setup-python needed
    container:
      image: python:3.11-bullseye

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mydb
          MYSQL_USER: user
          MYSQL_PASSWORD: pass
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      mongodb:
        image: mongo:6
        env:
          MONGO_INITDB_ROOT_USERNAME: user
          MONGO_INITDB_ROOT_PASSWORD: pass
        options: >-
          --health-cmd="mongosh --username user --password pass --host 127.0.0.1 --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: System tools (mysql client)
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y default-mysql-client
          python -V
          which python
          pip -V

      - name: Create .env file
        run: |
          # Use service DNS names
          echo "MYSQL_HOST=mysql" >> .env
          echo "MONGODB_HOST=mongodb" >> .env
          echo "MYSQL_DB_NAME=mydb" >> .env
          echo "DB_USERNAME=user" >> .env
          echo "DB_PASSWORD=pass" >> .env

      - name: Install dependencies
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Wait for MySQL to be ready
        env:
          MYSQL_PWD: pass
        run: |
          until mysqladmin ping -hmysql -u"user" --silent; do
            echo 'Waiting for MySQL...'
            sleep 2
          done
          echo 'MySQL is ready!'

      - name: Initialize database
        run: |
          mysql -hmysql -uuser -ppass mydb < db-init/init.sql

      - name: Run tests
        run: |
          python -m pytest src/tests/ -v --tb=short

      - name: Run application smoke test
        run: |
          timeout 10s python src/store_manager.py || true
